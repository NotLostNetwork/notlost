/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/app'
import { Route as IndexImport } from './routes/index'
import { Route as AppIndexImport } from './routes/app/index'
import { Route as AppTgSignInImport } from './routes/app/tg-sign-in'
import { Route as AppOnboardingImport } from './routes/app/onboarding'
import { Route as AppClosedBetaImport } from './routes/app/closed-beta'
import { Route as AppTabBarImport } from './routes/app/_tab-bar'
import { Route as AppTabBarMapIndexImport } from './routes/app/_tab-bar/map/index'
import { Route as AppTabBarGraphIndexImport } from './routes/app/_tab-bar/graph/index'
import { Route as AppTabBarContactsIndexImport } from './routes/app/_tab-bar/contacts/index'

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppTgSignInRoute = AppTgSignInImport.update({
  id: '/tg-sign-in',
  path: '/tg-sign-in',
  getParentRoute: () => AppRoute,
} as any)

const AppOnboardingRoute = AppOnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => AppRoute,
} as any)

const AppClosedBetaRoute = AppClosedBetaImport.update({
  id: '/closed-beta',
  path: '/closed-beta',
  getParentRoute: () => AppRoute,
} as any)

const AppTabBarRoute = AppTabBarImport.update({
  id: '/_tab-bar',
  getParentRoute: () => AppRoute,
} as any)

const AppTabBarMapIndexRoute = AppTabBarMapIndexImport.update({
  id: '/map/',
  path: '/map/',
  getParentRoute: () => AppTabBarRoute,
} as any)

const AppTabBarGraphIndexRoute = AppTabBarGraphIndexImport.update({
  id: '/graph/',
  path: '/graph/',
  getParentRoute: () => AppTabBarRoute,
} as any)

const AppTabBarContactsIndexRoute = AppTabBarContactsIndexImport.update({
  id: '/contacts/',
  path: '/contacts/',
  getParentRoute: () => AppTabBarRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/app/_tab-bar': {
      id: '/app/_tab-bar'
      path: ''
      fullPath: '/app'
      preLoaderRoute: typeof AppTabBarImport
      parentRoute: typeof AppImport
    }
    '/app/closed-beta': {
      id: '/app/closed-beta'
      path: '/closed-beta'
      fullPath: '/app/closed-beta'
      preLoaderRoute: typeof AppClosedBetaImport
      parentRoute: typeof AppImport
    }
    '/app/onboarding': {
      id: '/app/onboarding'
      path: '/onboarding'
      fullPath: '/app/onboarding'
      preLoaderRoute: typeof AppOnboardingImport
      parentRoute: typeof AppImport
    }
    '/app/tg-sign-in': {
      id: '/app/tg-sign-in'
      path: '/tg-sign-in'
      fullPath: '/app/tg-sign-in'
      preLoaderRoute: typeof AppTgSignInImport
      parentRoute: typeof AppImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/app/_tab-bar/contacts/': {
      id: '/app/_tab-bar/contacts/'
      path: '/contacts'
      fullPath: '/app/contacts'
      preLoaderRoute: typeof AppTabBarContactsIndexImport
      parentRoute: typeof AppTabBarImport
    }
    '/app/_tab-bar/graph/': {
      id: '/app/_tab-bar/graph/'
      path: '/graph'
      fullPath: '/app/graph'
      preLoaderRoute: typeof AppTabBarGraphIndexImport
      parentRoute: typeof AppTabBarImport
    }
    '/app/_tab-bar/map/': {
      id: '/app/_tab-bar/map/'
      path: '/map'
      fullPath: '/app/map'
      preLoaderRoute: typeof AppTabBarMapIndexImport
      parentRoute: typeof AppTabBarImport
    }
  }
}

// Create and export the route tree

interface AppTabBarRouteChildren {
  AppTabBarContactsIndexRoute: typeof AppTabBarContactsIndexRoute
  AppTabBarGraphIndexRoute: typeof AppTabBarGraphIndexRoute
  AppTabBarMapIndexRoute: typeof AppTabBarMapIndexRoute
}

const AppTabBarRouteChildren: AppTabBarRouteChildren = {
  AppTabBarContactsIndexRoute: AppTabBarContactsIndexRoute,
  AppTabBarGraphIndexRoute: AppTabBarGraphIndexRoute,
  AppTabBarMapIndexRoute: AppTabBarMapIndexRoute,
}

const AppTabBarRouteWithChildren = AppTabBarRoute._addFileChildren(
  AppTabBarRouteChildren,
)

interface AppRouteChildren {
  AppTabBarRoute: typeof AppTabBarRouteWithChildren
  AppClosedBetaRoute: typeof AppClosedBetaRoute
  AppOnboardingRoute: typeof AppOnboardingRoute
  AppTgSignInRoute: typeof AppTgSignInRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppTabBarRoute: AppTabBarRouteWithChildren,
  AppClosedBetaRoute: AppClosedBetaRoute,
  AppOnboardingRoute: AppOnboardingRoute,
  AppTgSignInRoute: AppTgSignInRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppTabBarRouteWithChildren
  '/app/closed-beta': typeof AppClosedBetaRoute
  '/app/onboarding': typeof AppOnboardingRoute
  '/app/tg-sign-in': typeof AppTgSignInRoute
  '/app/': typeof AppIndexRoute
  '/app/contacts': typeof AppTabBarContactsIndexRoute
  '/app/graph': typeof AppTabBarGraphIndexRoute
  '/app/map': typeof AppTabBarMapIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppIndexRoute
  '/app/closed-beta': typeof AppClosedBetaRoute
  '/app/onboarding': typeof AppOnboardingRoute
  '/app/tg-sign-in': typeof AppTgSignInRoute
  '/app/contacts': typeof AppTabBarContactsIndexRoute
  '/app/graph': typeof AppTabBarGraphIndexRoute
  '/app/map': typeof AppTabBarMapIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/app/_tab-bar': typeof AppTabBarRouteWithChildren
  '/app/closed-beta': typeof AppClosedBetaRoute
  '/app/onboarding': typeof AppOnboardingRoute
  '/app/tg-sign-in': typeof AppTgSignInRoute
  '/app/': typeof AppIndexRoute
  '/app/_tab-bar/contacts/': typeof AppTabBarContactsIndexRoute
  '/app/_tab-bar/graph/': typeof AppTabBarGraphIndexRoute
  '/app/_tab-bar/map/': typeof AppTabBarMapIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/app/closed-beta'
    | '/app/onboarding'
    | '/app/tg-sign-in'
    | '/app/'
    | '/app/contacts'
    | '/app/graph'
    | '/app/map'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/app/closed-beta'
    | '/app/onboarding'
    | '/app/tg-sign-in'
    | '/app/contacts'
    | '/app/graph'
    | '/app/map'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/app/_tab-bar'
    | '/app/closed-beta'
    | '/app/onboarding'
    | '/app/tg-sign-in'
    | '/app/'
    | '/app/_tab-bar/contacts/'
    | '/app/_tab-bar/graph/'
    | '/app/_tab-bar/map/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app.tsx",
      "children": [
        "/app/_tab-bar",
        "/app/closed-beta",
        "/app/onboarding",
        "/app/tg-sign-in",
        "/app/"
      ]
    },
    "/app/_tab-bar": {
      "filePath": "app/_tab-bar.tsx",
      "parent": "/app",
      "children": [
        "/app/_tab-bar/contacts/",
        "/app/_tab-bar/graph/",
        "/app/_tab-bar/map/"
      ]
    },
    "/app/closed-beta": {
      "filePath": "app/closed-beta.tsx",
      "parent": "/app"
    },
    "/app/onboarding": {
      "filePath": "app/onboarding.tsx",
      "parent": "/app"
    },
    "/app/tg-sign-in": {
      "filePath": "app/tg-sign-in.tsx",
      "parent": "/app"
    },
    "/app/": {
      "filePath": "app/index.tsx",
      "parent": "/app"
    },
    "/app/_tab-bar/contacts/": {
      "filePath": "app/_tab-bar/contacts/index.tsx",
      "parent": "/app/_tab-bar"
    },
    "/app/_tab-bar/graph/": {
      "filePath": "app/_tab-bar/graph/index.tsx",
      "parent": "/app/_tab-bar"
    },
    "/app/_tab-bar/map/": {
      "filePath": "app/_tab-bar/map/index.tsx",
      "parent": "/app/_tab-bar"
    }
  }
}
ROUTE_MANIFEST_END */
